
  [
    {
      "id": 1,
      "question": "What is useState and how does it work in React?",
      "answer": "useState is a React Hook that lets you add state to functional components. It returns an array with two elements: the current state value and a function to update it. When the state is updated, the component re-renders. Example: const [count, setCount] = useState(0);"
    },
    {
      "id": 2,
      "question": "What is the purpose of useEffect in React?",
      "answer": "useEffect is a React Hook used to handle side effects in functional components, such as fetching data, manipulating the DOM, or setting up subscriptions. It runs after the component renders. You can control when it runs by specifying dependencies in an array as the second argument."
    },
    {
      "id": 3,
      "question": "What is a custom hook in React and when should you use one?",
      "answer": "A custom hook is a reusable function that uses one or more built-in React hooks. It helps encapsulate and share logic across multiple components. You should use a custom hook when you have hook-related logic (like useState, useEffect, etc.) that you need to reuse in multiple places."
    },
    {
      "id": 4,
      "question": "Difference between controlled and uncontrolled components. Which one is better?",
      "answer": "Controlled components have their form data controlled by React state, using useState or similar. Uncontrolled components rely on the DOM to keep track of values using refs. Controlled components are better in most cases because they provide more control and predictable behavior, especially for form validation and dynamic UI updates."
    },
    {
      "id": 5,
      "question": "Tell us something about useFormStatus() in React.",
      "answer": "useFormStatus() is a hook from React that gives information about the status of a form submission, primarily used with <form> elements and actions in frameworks like Next.js with server actions. It helps you track states like 'pending', which is useful for disabling buttons or showing loading indicators during form submission."
    }
  ]
  
  